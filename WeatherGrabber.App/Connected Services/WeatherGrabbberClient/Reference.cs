//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherGrabber.App.WeatherGrabbberClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Weather", Namespace="http://schemas.datacontract.org/2004/07/WeatherGrabber.WCF.Model")]
    [System.SerializableAttribute()]
    public partial class Weather : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeoMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrecipitationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherGrabber.App.WeatherGrabbberClient.Pressure[] PressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherGrabber.App.WeatherGrabbberClient.Temperature[] TemperaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UvbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherGrabber.App.WeatherGrabbberClient.Wind[] WindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindDirectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeoM {
            get {
                return this.GeoMField;
            }
            set {
                if ((object.ReferenceEquals(this.GeoMField, value) != true)) {
                    this.GeoMField = value;
                    this.RaisePropertyChanged("GeoM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Humidity {
            get {
                return this.HumidityField;
            }
            set {
                if ((object.ReferenceEquals(this.HumidityField, value) != true)) {
                    this.HumidityField = value;
                    this.RaisePropertyChanged("Humidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Precipitation {
            get {
                return this.PrecipitationField;
            }
            set {
                if ((object.ReferenceEquals(this.PrecipitationField, value) != true)) {
                    this.PrecipitationField = value;
                    this.RaisePropertyChanged("Precipitation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherGrabber.App.WeatherGrabbberClient.Pressure[] Pressure {
            get {
                return this.PressureField;
            }
            set {
                if ((object.ReferenceEquals(this.PressureField, value) != true)) {
                    this.PressureField = value;
                    this.RaisePropertyChanged("Pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherGrabber.App.WeatherGrabbberClient.Temperature[] Temperatures {
            get {
                return this.TemperaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.TemperaturesField, value) != true)) {
                    this.TemperaturesField = value;
                    this.RaisePropertyChanged("Temperatures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tip {
            get {
                return this.TipField;
            }
            set {
                if ((object.ReferenceEquals(this.TipField, value) != true)) {
                    this.TipField = value;
                    this.RaisePropertyChanged("Tip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uvb {
            get {
                return this.UvbField;
            }
            set {
                if ((object.ReferenceEquals(this.UvbField, value) != true)) {
                    this.UvbField = value;
                    this.RaisePropertyChanged("Uvb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherGrabber.App.WeatherGrabbberClient.Wind[] Wind {
            get {
                return this.WindField;
            }
            set {
                if ((object.ReferenceEquals(this.WindField, value) != true)) {
                    this.WindField = value;
                    this.RaisePropertyChanged("Wind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindDirection {
            get {
                return this.WindDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.WindDirectionField, value) != true)) {
                    this.WindDirectionField = value;
                    this.RaisePropertyChanged("WindDirection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pressure", Namespace="http://schemas.datacontract.org/2004/07/WeatherGrabber.WCF.Model")]
    [System.SerializableAttribute()]
    public partial class Pressure : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherGrabber.App.WeatherGrabbberClient.PressureMeasurement MeasurementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherGrabber.App.WeatherGrabbberClient.RangeSide RangeSideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherGrabber.App.WeatherGrabbberClient.PressureMeasurement Measurement {
            get {
                return this.MeasurementField;
            }
            set {
                if ((this.MeasurementField.Equals(value) != true)) {
                    this.MeasurementField = value;
                    this.RaisePropertyChanged("Measurement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherGrabber.App.WeatherGrabbberClient.RangeSide RangeSide {
            get {
                return this.RangeSideField;
            }
            set {
                if ((this.RangeSideField.Equals(value) != true)) {
                    this.RangeSideField = value;
                    this.RaisePropertyChanged("RangeSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Temperature", Namespace="http://schemas.datacontract.org/2004/07/WeatherGrabber.WCF.Model")]
    [System.SerializableAttribute()]
    public partial class Temperature : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherGrabber.App.WeatherGrabbberClient.TemperatureMeasurement MeasurementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherGrabber.App.WeatherGrabbberClient.RangeSide RangeSideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherGrabber.App.WeatherGrabbberClient.TemperatureMeasurement Measurement {
            get {
                return this.MeasurementField;
            }
            set {
                if ((this.MeasurementField.Equals(value) != true)) {
                    this.MeasurementField = value;
                    this.RaisePropertyChanged("Measurement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherGrabber.App.WeatherGrabbberClient.RangeSide RangeSide {
            get {
                return this.RangeSideField;
            }
            set {
                if ((this.RangeSideField.Equals(value) != true)) {
                    this.RangeSideField = value;
                    this.RaisePropertyChanged("RangeSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Wind", Namespace="http://schemas.datacontract.org/2004/07/WeatherGrabber.WCF.Model")]
    [System.SerializableAttribute()]
    public partial class Wind : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherGrabber.App.WeatherGrabbberClient.WindMeasurement MeasurementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGust {
            get {
                return this.IsGustField;
            }
            set {
                if ((this.IsGustField.Equals(value) != true)) {
                    this.IsGustField = value;
                    this.RaisePropertyChanged("IsGust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherGrabber.App.WeatherGrabbberClient.WindMeasurement Measurement {
            get {
                return this.MeasurementField;
            }
            set {
                if ((this.MeasurementField.Equals(value) != true)) {
                    this.MeasurementField = value;
                    this.RaisePropertyChanged("Measurement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PressureMeasurement", Namespace="http://schemas.datacontract.org/2004/07/WeatherGrabber.WCF.Model")]
    public enum PressureMeasurement : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MmHgAtm = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pa = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InHg = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RangeSide", Namespace="http://schemas.datacontract.org/2004/07/WeatherGrabber.WCF.Model")]
    public enum RangeSide : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Min = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Max = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Average = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemperatureMeasurement", Namespace="http://schemas.datacontract.org/2004/07/WeatherGrabber.WCF.Model")]
    public enum TemperatureMeasurement : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Celsius = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fahrenheit = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindMeasurement", Namespace="http://schemas.datacontract.org/2004/07/WeatherGrabber.WCF.Model")]
    public enum WindMeasurement : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MS = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiH = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KmH = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/WeatherGrabber.WCF.Faults")]
    [System.SerializableAttribute()]
    public partial class WeatherNotFoundFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomError {
            get {
                return this.CustomErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomErrorField, value) != true)) {
                    this.CustomErrorField = value;
                    this.RaisePropertyChanged("CustomError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherGrabbberClient.IWeatherGrabberService")]
    public interface IWeatherGrabberService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherGrabberService/GetCities", ReplyAction="http://tempuri.org/IWeatherGrabberService/GetCitiesResponse")]
        string[] GetCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherGrabberService/GetCities", ReplyAction="http://tempuri.org/IWeatherGrabberService/GetCitiesResponse")]
        System.Threading.Tasks.Task<string[]> GetCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherGrabberService/GetWeather", ReplyAction="http://tempuri.org/IWeatherGrabberService/GetWeatherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WeatherGrabber.App.WeatherGrabbberClient.WeatherNotFoundFault), Action="http://tempuri.org/IWeatherGrabberService/GetWeatherWeatherNotFoundFaultFault", Name="WeatherNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/WeatherGrabber.WCF.Faults")]
        WeatherGrabber.App.WeatherGrabbberClient.Weather GetWeather(string cityName, System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherGrabberService/GetWeather", ReplyAction="http://tempuri.org/IWeatherGrabberService/GetWeatherResponse")]
        System.Threading.Tasks.Task<WeatherGrabber.App.WeatherGrabbberClient.Weather> GetWeatherAsync(string cityName, System.DateTime dateTime);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherGrabberServiceChannel : WeatherGrabber.App.WeatherGrabbberClient.IWeatherGrabberService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherGrabberServiceClient : System.ServiceModel.ClientBase<WeatherGrabber.App.WeatherGrabbberClient.IWeatherGrabberService>, WeatherGrabber.App.WeatherGrabbberClient.IWeatherGrabberService {
        
        public WeatherGrabberServiceClient() {
        }
        
        public WeatherGrabberServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherGrabberServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherGrabberServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherGrabberServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetCities() {
            return base.Channel.GetCities();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCitiesAsync() {
            return base.Channel.GetCitiesAsync();
        }
        
        public WeatherGrabber.App.WeatherGrabbberClient.Weather GetWeather(string cityName, System.DateTime dateTime) {
            return base.Channel.GetWeather(cityName, dateTime);
        }
        
        public System.Threading.Tasks.Task<WeatherGrabber.App.WeatherGrabbberClient.Weather> GetWeatherAsync(string cityName, System.DateTime dateTime) {
            return base.Channel.GetWeatherAsync(cityName, dateTime);
        }
    }
}
